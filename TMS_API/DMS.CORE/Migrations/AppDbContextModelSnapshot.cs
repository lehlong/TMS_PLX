// <auto-generated />
using System;
using DMS.CORE;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace DMS.CORE.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.HasSequence<int>("ORDER_SEQUENCE");

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblActionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionUrl")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ACTION_URL");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("RequestData")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("REQUEST_DATA");

                    b.Property<DateTime?>("RequestTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("REQUEST_TIME");

                    b.Property<string>("ResponseData")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("RESPONSE_DATA");

                    b.Property<DateTime?>("ResponseTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("RESPONSE_TIME");

                    b.Property<int>("StatusCode")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("STATUS_CODE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.ToTable("T_AD_ACTIONLOG");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccount", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("AccountType")
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("ACCOUNT_TYPE");

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<int?>("DriverId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DRIVER_ID");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("FULL_NAME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("UserName");

                    b.HasIndex("DriverId");

                    b.HasIndex("PartnerId");

                    b.ToTable("T_AD_ACCOUNT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nVARCHAR2(50)")
                        .HasColumnName("NAME");

                    b.Property<string>("Notes")
                        .HasColumnType("nVARCHAR2(255)")
                        .HasColumnName("NOTES");

                    b.Property<string>("RoleCode")
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ROLE_CODE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("T_AD_ACCOUNTGROUP");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountGroupRight", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("GROUP_ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("RightId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("RIGHT_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("RightId");

                    b.ToTable("T_AD_ACCOUNTGROUP_RIGHT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<DateTime>("ExpireTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("EXPIRE_TIME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("REFRESH_TOKEN");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("T_AD_REFRESH_TOKEN");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountRight", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<string>("RightId")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("RIGHT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsAdded")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ADDED");

                    b.Property<bool?>("IsRemoved")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_REMOVED");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("UserName", "RightId");

                    b.HasIndex("RightId");

                    b.ToTable("T_AD_ACCOUNT_RIGHT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccount_AccountGroup", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("GROUP_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("UserName", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("T_AD_ACCOUNT_ACCOUNTGROUP");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAppVersion", b =>
                {
                    b.Property<int>("VersionCode")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("VERSION_CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool>("IsRequiredUpdate")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_REQUIRED_UPDATE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VERSION_NAME");

                    b.HasKey("VersionCode");

                    b.ToTable("T_AD_APP_VERSION");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdMenu", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<string>("Icon")
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("ICON");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("PId")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("P_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("Url")
                        .HasColumnType("VARCHAR2(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("T_AD_MENU");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdMenuRight", b =>
                {
                    b.Property<string>("MenuId")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("RightId")
                        .HasColumnType("VARCHAR2(50)");

                    b.HasKey("MenuId", "RightId");

                    b.HasIndex("RightId");

                    b.ToTable("T_AD_MENU_RIGHT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdMessage", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Lang")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(10)")
                        .HasColumnName("LANG");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nVARCHAR2(255)")
                        .HasColumnName("VALUE");

                    b.HasKey("Code");

                    b.ToTable("T_AD_MESSAGE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdRight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeleteBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("DELETE_BY");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DELETE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_DELETED");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nVARCHAR2(50)");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("PId")
                        .HasColumnType("VARCHAR2(50)");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("T_AD_RIGHT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdSystemTrace", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("varchar2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("varchar2(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("InterVal")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("INTERVAL");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<DateTime?>("LastCheckTime")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("LAST_CHECK_TIME");

                    b.Property<string>("Log")
                        .HasColumnType("nvarchar2(500)")
                        .HasColumnName("LOG");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar2(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar2(500)")
                        .HasColumnName("NOTE");

                    b.Property<bool?>("Status")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("STATUS");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar2(50)")
                        .HasColumnName("TYPE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.ToTable("T_AD_SYSTEM_TRACE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("varchar2(50)")
                        .HasColumnName("EXTENSION");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar2(255)")
                        .HasColumnName("NAME");

                    b.Property<double>("Size")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("SIZE");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar2(50)")
                        .HasColumnName("TYPE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar2(255)")
                        .HasColumnName("URL");

                    b.HasKey("Id");

                    b.ToTable("T_CM_ATTACHMENT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AttachmentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ATTACHMENT_ID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar2(1000)")
                        .HasColumnName("CONTENT");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int?>("PId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("P_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar2(255)")
                        .HasColumnName("TYPE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.HasIndex("CreateBy");

                    b.HasIndex("PId");

                    b.HasIndex("UpdateBy");

                    b.ToTable("T_CM_COMMENT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmModuleAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AttachmentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ATTACHMENT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("ModuleType")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("MODULE_TYPE");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("AttachmentId");

                    b.ToTable("T_CM_MODULE_ATTACHMENT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmModuleComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CommentId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("COMMENT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("ModuleType")
                        .HasColumnType("varchar2(50)")
                        .HasColumnName("MODULE_TYPE");

                    b.Property<Guid>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("CommentId")
                        .IsUnique();

                    b.ToTable("T_CM_MODULE_COMMENT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdArea", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("T_MD_AREA");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDistrict", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<int?>("ProvineId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PROVINE_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("ProvineId");

                    b.ToTable("T_MD_DISTRICT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDriver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CccdNumber")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("CCCD_NUMBER");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("FULL_NAME");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Notes")
                        .HasColumnType("NVARCHAR2(510)")
                        .HasColumnName("NOTES");

                    b.Property<int?>("PartnerIdCreate")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_CREATE");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.HasKey("Id");

                    b.HasIndex("PartnerIdCreate");

                    b.HasIndex("UserName");

                    b.ToTable("T_MD_DRIVER");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdGroupItem", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.ToTable("T_MD_GROUP_ITEM");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdItem", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("GroupCode")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("GROUP_ITEM_CODE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("TypeCode")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("TYPE_ITEM_CODE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.HasIndex("GroupCode");

                    b.HasIndex("TypeCode");

                    b.ToTable("T_MD_ITEM");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdPartner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("Description")
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<int?>("DistrictId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DISTRICT_ID");

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR2(155)")
                        .HasColumnName("EMAIL");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool>("IsCustomer")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_CUSTOMER");

                    b.Property<bool>("IsSupplier")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_SUPPLIER");

                    b.Property<string>("Latitude")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("Longitude")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PHONE_NUMBER");

                    b.Property<int?>("ProvineId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PROVINCE_ID");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("Representative")
                        .HasColumnType("VARCHAR2(155)")
                        .HasColumnName("REPRESENTATIVE");

                    b.Property<string>("SaleTypeCode")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("SALE_TYPE_CODE");

                    b.Property<string>("TaxNumber")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("TAX_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("WardId")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("WARD_ID");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("DistrictId");

                    b.HasIndex("ProvineId");

                    b.HasIndex("SaleTypeCode");

                    b.HasIndex("WardId");

                    b.ToTable("T_MD_PARTNER");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdProvine", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("T_MD_PROVINE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdSaleType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(155)")
                        .HasColumnName("NAME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.ToTable("T_MD_SALE_TYPE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdTypeItem", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.ToTable("T_MD_TYPE_ITEM");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdUnit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.ToTable("T_MD_UNIT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdVehicle", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<double?>("Height")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("HEIGHT");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<double?>("Length")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("LENGTH");

                    b.Property<int?>("PartnerIdCreate")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_CREATE");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<double?>("TareTonnage")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("TARE_TONNAGE");

                    b.Property<double?>("Tonnage")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("TONNAGE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("VehicleTypeCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VEHICLE_TYPE_CODE");

                    b.Property<double?>("Width")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("WIDTH");

                    b.HasKey("Code");

                    b.HasIndex("PartnerIdCreate");

                    b.HasIndex("VehicleTypeCode");

                    b.ToTable("T_MD_VEHICLE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdVehicleType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(155)")
                        .HasColumnName("NAME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Code");

                    b.ToTable("T_MD_VEHICLE_TYPE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdWard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int?>("DistrictId")
                        .IsRequired()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DISTRICT_ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NAME");

                    b.Property<int>("OrderNumber")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("DistrictId");

                    b.ToTable("T_MD_WARD");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountCareStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ACTION_DATE");

                    b.Property<string>("Contents")
                        .IsRequired()
                        .HasColumnType("CLOB")
                        .HasColumnName("CONTENTS");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<int>("PlanId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PLAN_ID");

                    b.Property<string>("RefrenceId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(40)")
                        .HasColumnName("REFRENCE_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PlanId");

                    b.ToTable("T_MN_ACCOUNT_CARE_STORE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountPlanVisit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("Month")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MONTH");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("PLAN_NAME");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<int>("Year")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("YEAR");

                    b.HasKey("Id");

                    b.HasIndex("UserName");

                    b.ToTable("T_MN_ACCOUNT_PLAN_VISIT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountPlanVisitStore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<int>("PlanId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PLAN_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PlanId");

                    b.ToTable("T_MN_ACCOUNT_PLAN_VISIT_STORE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountSaleOffice", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("USER_NAME");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("UserName", "PartnerId");

                    b.HasIndex("PartnerId");

                    b.ToTable("T_MN_ACCOUNT_SALE_OFFICE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAreaItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AREA_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ITEM_CODE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("ItemCode");

                    b.ToTable("T_MN_AREA_ITEM");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnContract", b =>
                {
                    b.Property<string>("ContractId")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CONTRACT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("ContractId");

                    b.ToTable("T_MN_CONTRACT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnDriverVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<int>("DriverId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("VehicleCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VEHICLE_CODE");

                    b.HasKey("Id");

                    b.HasIndex("DriverId");

                    b.HasIndex("VehicleCode");

                    b.ToTable("T_MN_DRIVER_VEHICLE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AREA_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("PartnerId");

                    b.ToTable("T_MN_PARTNER_AREA");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContractId")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CONTRACT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("ContractId");

                    b.HasIndex("PartnerId");

                    b.ToTable("T_MN_PARTNER_CONTRACT");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerReference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerIdBuy")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_BUY");

                    b.Property<int>("PartnerIdSell")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_SELL");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("PartnerIdSell");

                    b.HasIndex("PartnerIdBuy", "PartnerIdSell")
                        .IsUnique();

                    b.ToTable("T_MN_PARTNER_REFERENCE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<int>("PartnerId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("VehicleCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VEHICLE_CODE");

                    b.HasKey("Id");

                    b.HasIndex("VehicleCode");

                    b.HasIndex("PartnerId", "VehicleCode")
                        .IsUnique();

                    b.ToTable("T_MN_PARTNER_VEHICLE");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrder", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CODE");

                    b.Property<int?>("AreaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("AREA_ID");

                    b.Property<string>("ContractId")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CONTRACT_ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<string>("DeliveryCode")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("DELIVERY_CODE");

                    b.Property<int?>("DriverId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("DRIVER_ID");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<bool?>("IsSyncErp")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_SYNC_ERP");

                    b.Property<string>("Notes")
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("NOTES");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ORDER_DATE");

                    b.Property<string>("ParentCode")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("PARENT_CODE");

                    b.Property<int?>("PartnerIdBuy")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_BUY");

                    b.Property<int?>("PartnerIdSell")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("PARTNER_ID_SELL");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("State")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATE");

                    b.Property<string>("Type")
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("TYPE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.Property<string>("VehicleCode")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("VEHICLE_CODE");

                    b.HasKey("Code");

                    b.HasIndex("AreaId");

                    b.HasIndex("ContractId");

                    b.HasIndex("DriverId");

                    b.HasIndex("ParentCode");

                    b.HasIndex("PartnerIdBuy");

                    b.HasIndex("PartnerIdSell");

                    b.HasIndex("VehicleCode");

                    b.ToTable("T_SO_ORDER");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("CreateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("CREATE_BY");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("CREATE_DATE");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("IS_ACTIVE");

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ITEM_CODE");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ORDER_CODE");

                    b.Property<double>("OrderNumber")
                        .HasColumnType("BINARY_DOUBLE")
                        .HasColumnName("ORDER_NUMBER");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("RAW(16)")
                        .HasColumnName("REFERENCE_ID");

                    b.Property<string>("UnitCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UNIT_CODE");

                    b.Property<string>("UpdateBy")
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("UPDATE_BY");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("UPDATE_DATE");

                    b.HasKey("Id");

                    b.HasIndex("ItemCode");

                    b.HasIndex("OrderCode");

                    b.HasIndex("UnitCode");

                    b.ToTable("T_SO_ORDER_DETAIL");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrderProcess", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("RAW(16)")
                        .HasColumnName("ID");

                    b.Property<string>("ActionCode")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("ACTION_CODE");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasColumnType("VARCHAR2(50)")
                        .HasColumnName("ORDER_CODE");

                    b.Property<string>("PrevState")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("PREV_STATE");

                    b.Property<DateTime>("ProcessDate")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("PROCESS_DATE");

                    b.Property<string>("State")
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATE");

                    b.HasKey("Id");

                    b.HasIndex("OrderCode");

                    b.ToTable("T_SO_ORDER_PROCESS");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccount", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdDriver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId");

                    b.Navigation("Driver");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountGroupRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccountGroup", "AccountGroup")
                        .WithMany("ListAccountGroupRight")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.TblAdRight", "Right")
                        .WithMany("AccountGroupRights")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountGroup");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountRefreshToken", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdRight", "Right")
                        .WithMany("AccountRights")
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany("AccountRights")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccount_AccountGroup", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccountGroup", "AccountGroup")
                        .WithMany("Account_AccountGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany("Account_AccountGroups")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("AccountGroup");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdMenuRight", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdMenu", "Menu")
                        .WithMany("RightReferences")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.TblAdRight", "Right")
                        .WithMany()
                        .HasForeignKey("RightId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");

                    b.Navigation("Right");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmComment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.TblCmAttachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId");

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Creator")
                        .WithMany()
                        .HasForeignKey("CreateBy");

                    b.HasOne("DMS.CORE.Entities.BU.TblCmComment", "PComment")
                        .WithMany("Replies")
                        .HasForeignKey("PId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Updater")
                        .WithMany()
                        .HasForeignKey("UpdateBy");

                    b.Navigation("Attachment");

                    b.Navigation("Creator");

                    b.Navigation("PComment");

                    b.Navigation("Updater");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmModuleAttachment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.TblCmAttachment", "Attachment")
                        .WithMany()
                        .HasForeignKey("AttachmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmModuleComment", b =>
                {
                    b.HasOne("DMS.CORE.Entities.BU.TblCmComment", "Comment")
                        .WithOne("ModuleComment")
                        .HasForeignKey("DMS.CORE.Entities.BU.TblCmModuleComment", "CommentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comment");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDistrict", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdProvine", "Provine")
                        .WithMany("Districts")
                        .HasForeignKey("ProvineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Provine");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDriver", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerCreate")
                        .WithMany()
                        .HasForeignKey("PartnerIdCreate");

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("UserName");

                    b.Navigation("Account");

                    b.Navigation("PartnerCreate");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdItem", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdGroupItem", "Group")
                        .WithMany()
                        .HasForeignKey("GroupCode");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdTypeItem", "Type")
                        .WithMany()
                        .HasForeignKey("TypeCode");

                    b.Navigation("Group");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdPartner", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdDistrict", "District")
                        .WithMany()
                        .HasForeignKey("DistrictId");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdProvine", "Provine")
                        .WithMany()
                        .HasForeignKey("ProvineId");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdSaleType", "SaleType")
                        .WithMany("Partners")
                        .HasForeignKey("SaleTypeCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.TblMdWard", "Ward")
                        .WithMany()
                        .HasForeignKey("WardId");

                    b.Navigation("District");

                    b.Navigation("Provine");

                    b.Navigation("SaleType");

                    b.Navigation("Ward");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerCreate")
                        .WithMany()
                        .HasForeignKey("PartnerIdCreate");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdVehicleType", "Type")
                        .WithMany()
                        .HasForeignKey("VehicleTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartnerCreate");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdWard", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdDistrict", "District")
                        .WithMany("Wards")
                        .HasForeignKey("DistrictId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("District");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountCareStore", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MN.TblMnAccountPlanVisit", "AccountPlanVisit")
                        .WithMany("AccountCareStores")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountPlanVisit");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountPlanVisit", b =>
                {
                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany()
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountPlanVisitStore", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MN.TblMnAccountPlanVisit", "AccountPlanVisit")
                        .WithMany("AccountPlanVisitStores")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountPlanVisit");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountSaleOffice", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany("AccountSaleOffices")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.AD.TblAdAccount", "Account")
                        .WithMany("AccountSaleOffices")
                        .HasForeignKey("UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAreaItem", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdArea", "Area")
                        .WithMany("ItemReferences")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdItem", "Item")
                        .WithMany("AreaReferences")
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnDriverVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdDriver", "Driver")
                        .WithMany("VehicleReferences")
                        .HasForeignKey("DriverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdVehicle", "Vehicle")
                        .WithMany("DriverReferences")
                        .HasForeignKey("VehicleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Driver");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerArea", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdArea", "Area")
                        .WithMany("PartnerReferences")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany("AreaReferences")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerContract", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MN.TblMnContract", "Contract")
                        .WithMany("PartnerContracts")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany()
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerReference", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerBuy")
                        .WithMany("ReferenceBuys")
                        .HasForeignKey("PartnerIdBuy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerSell")
                        .WithMany("ReferenceSells")
                        .HasForeignKey("PartnerIdSell")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PartnerBuy");

                    b.Navigation("PartnerSell");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnPartnerVehicle", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "Partner")
                        .WithMany("VehicleReferences")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdVehicle", "Vehicle")
                        .WithMany("PartnerReferences")
                        .HasForeignKey("VehicleCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partner");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrder", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdArea", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId");

                    b.HasOne("DMS.CORE.Entities.MN.TblMnContract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractId");

                    b.HasOne("DMS.CORE.Entities.MD.TblMdDriver", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("DMS.CORE.Entities.SO.TblSoOrder", "Parent")
                        .WithMany("Childs")
                        .HasForeignKey("ParentCode")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerBuy")
                        .WithMany()
                        .HasForeignKey("PartnerIdBuy")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.TblMdPartner", "PartnerSell")
                        .WithMany()
                        .HasForeignKey("PartnerIdSell")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("DMS.CORE.Entities.MD.TblMdVehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleCode");

                    b.Navigation("Area");

                    b.Navigation("Contract");

                    b.Navigation("Driver");

                    b.Navigation("Parent");

                    b.Navigation("PartnerBuy");

                    b.Navigation("PartnerSell");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrderDetail", b =>
                {
                    b.HasOne("DMS.CORE.Entities.MD.TblMdItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.SO.TblSoOrder", "Order")
                        .WithMany("Details")
                        .HasForeignKey("OrderCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DMS.CORE.Entities.MD.TblMdUnit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Order");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrderProcess", b =>
                {
                    b.HasOne("DMS.CORE.Entities.SO.TblSoOrder", "Order")
                        .WithMany("Processes")
                        .HasForeignKey("OrderCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccount", b =>
                {
                    b.Navigation("AccountRights");

                    b.Navigation("AccountSaleOffices");

                    b.Navigation("Account_AccountGroups");

                    b.Navigation("RefreshTokens");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdAccountGroup", b =>
                {
                    b.Navigation("Account_AccountGroups");

                    b.Navigation("ListAccountGroupRight");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdMenu", b =>
                {
                    b.Navigation("RightReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.AD.TblAdRight", b =>
                {
                    b.Navigation("AccountGroupRights");

                    b.Navigation("AccountRights");
                });

            modelBuilder.Entity("DMS.CORE.Entities.BU.TblCmComment", b =>
                {
                    b.Navigation("ModuleComment")
                        .IsRequired();

                    b.Navigation("Replies");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdArea", b =>
                {
                    b.Navigation("ItemReferences");

                    b.Navigation("PartnerReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDistrict", b =>
                {
                    b.Navigation("Wards");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdDriver", b =>
                {
                    b.Navigation("VehicleReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdItem", b =>
                {
                    b.Navigation("AreaReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdPartner", b =>
                {
                    b.Navigation("AccountSaleOffices");

                    b.Navigation("AreaReferences");

                    b.Navigation("ReferenceBuys");

                    b.Navigation("ReferenceSells");

                    b.Navigation("VehicleReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdProvine", b =>
                {
                    b.Navigation("Districts");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdSaleType", b =>
                {
                    b.Navigation("Partners");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MD.TblMdVehicle", b =>
                {
                    b.Navigation("DriverReferences");

                    b.Navigation("PartnerReferences");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnAccountPlanVisit", b =>
                {
                    b.Navigation("AccountCareStores");

                    b.Navigation("AccountPlanVisitStores");
                });

            modelBuilder.Entity("DMS.CORE.Entities.MN.TblMnContract", b =>
                {
                    b.Navigation("PartnerContracts");
                });

            modelBuilder.Entity("DMS.CORE.Entities.SO.TblSoOrder", b =>
                {
                    b.Navigation("Childs");

                    b.Navigation("Details");

                    b.Navigation("Processes");
                });
#pragma warning restore 612, 618
        }
    }
}
